					BUBBLE SORT
This sorting algorithm sorts an array of element, one at a time by comparing the first and second elements and swapping if the 2nd is bigger than the first. for instance 
given an unsorted list 
	1|4|6|5|3|2|0-------------------> first unsorted list
	compare a[0] and a[1] if a[0] is bigger would swap otherwise it retains same position and pivot changes.
	1|4|5|3|2|0|6---------------> 1st sort
	1|4|3|2|0|5|6---------------> 2nd sort
	1|3|2|0|4|5|6---------------> 3rd sort
	1|2|0|3|4|5|6---------------> 4th sort
	1|0|2|3|4|5|6---------------> 5th sort
	0|1|2|3|4|5|6------------->sorted list


From the This instance, the best case scenario for time complexity is O(n) 

another scenario
	8|4|2|7|5|3|9------------------> Unsorted list
	4|2|7|5|3|8|9------------------> 1st sort
	2|4|5|3|7|8|9------------------> 2nd sort
	2|4|3|5|7|8|9------------------> 3rd sort
	2|3|4|5|7|8|9------------------> sorted list

------------------------------------------------------------------------------------------------------------------------------------------

PseudoCode for Bubble sort
--------------------------
procedure bubbleSort(arr: array of elements)
    n = length(arr)
    for i = 0 to n - 1
        for j = 0 to n - i - 1
            if arr[j] > arr[j + 1]
                swap(arr[j], arr[j + 1])
            end if
        end for
    end for
end procedure

 




